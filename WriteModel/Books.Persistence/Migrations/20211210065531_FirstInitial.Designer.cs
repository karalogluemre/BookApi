// <auto-generated />
using System;
using Books.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.Persistence.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20211210065531_FirstInitial")]
    partial class FirstInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.BookContext.Domain.Authors.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9fdf3b04-acce-426e-b317-d17944e333c1"),
                            Name = "William Shakespeare"
                        },
                        new
                        {
                            Id = new Guid("96237378-bb91-44aa-b817-2402c29a89cf"),
                            Name = "William Faulkner"
                        },
                        new
                        {
                            Id = new Guid("743e6856-523e-440b-a654-a8cba7795d0b"),
                            Name = "Henry James"
                        },
                        new
                        {
                            Id = new Guid("c623c015-8a3e-4848-b1f4-542f93e6ca97"),
                            Name = "Jane Austen"
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Bookss.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<Guid>("SubTypeId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SubTypeId");

                    b.ToTable("Book", "BookContext");
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.SubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("SubType", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("091f7c15-9ca9-40ff-97e3-d7e905acf28f"),
                            Name = "Painting",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("8873f861-b8e1-4156-89c9-586c5359ea63"),
                            Name = "Poems",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("349f1d56-acf0-4a8d-90ca-0c6973087ab7"),
                            Name = "Adventure",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("d6a334d0-af8a-4ec4-b8ba-8f209d9236a5"),
                            Name = "Detective and Mystery",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("90be391e-2dcc-49a0-9efc-00c820768f62"),
                            Name = "Fantasy",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("ab9b9bc6-42ea-4e35-8692-040a3a8a4918"),
                            Name = "Horror",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("45454bdc-0218-4ea2-ade8-0c942fd4c9e7"),
                            Name = "Literary Fiction",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85"),
                            Name = "Children"
                        },
                        new
                        {
                            Id = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce"),
                            Name = "Adult"
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Bookss.Book", b =>
                {
                    b.HasOne("Books.BookContext.Domain.Authors.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Books.BookContext.Domain.Types.SubType", null)
                        .WithMany()
                        .HasForeignKey("SubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.SubType", b =>
                {
                    b.HasOne("Books.BookContext.Domain.Types.Type", "Type")
                        .WithMany("SubTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.Type", b =>
                {
                    b.Navigation("SubTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
