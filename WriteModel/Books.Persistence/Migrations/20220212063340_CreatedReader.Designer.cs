// <auto-generated />
using System;
using Books.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Books.Persistence.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20220212063340_created-reader")]
    partial class createdreader
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Books.BookContext.Domain.Authors.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("caaf6ee0-22b9-4cf7-9526-9d36358eba2e"),
                            Name = "William Shakespeare"
                        },
                        new
                        {
                            Id = new Guid("241eb9a8-2206-49a4-9095-000002cd7ed8"),
                            Name = "William Faulkner"
                        },
                        new
                        {
                            Id = new Guid("de9cf188-1968-4d3a-a148-320bc3a6799a"),
                            Name = "Henry James"
                        },
                        new
                        {
                            Id = new Guid("cc000d2c-9f05-4ed5-918d-faecd6717feb"),
                            Name = "Jane Austen"
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Bookss.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<Guid>("SubTypeId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("SubTypeId");

                    b.ToTable("Book", "BookContext");
                });

            modelBuilder.Entity("Books.BookContext.Domain.Readers.Reader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<Guid>("BookId")
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Reader", "BookContext");
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.SubType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("SubType", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d8831d1-6a89-41fc-b77d-2880013862ac"),
                            Name = "Painting",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("85a3bfe0-753b-4be6-b9eb-b2300aa7a7cc"),
                            Name = "Poems",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("5ade84a3-2262-4771-b191-089aee4501c7"),
                            Name = "Adventure",
                            TypeId = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85")
                        },
                        new
                        {
                            Id = new Guid("73f205d5-f70c-4d20-bcad-a6dd46b44fdc"),
                            Name = "Detective and Mystery",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("7d51cc5e-499b-4379-b971-3a6a362fdb7f"),
                            Name = "Fantasy",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("6e2e35f7-2560-4ced-bbfc-7d34d179cdf4"),
                            Name = "Horror",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        },
                        new
                        {
                            Id = new Guid("916bac7a-36db-48c2-a9a3-df859766b304"),
                            Name = "Literary Fiction",
                            TypeId = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce")
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Type", "BookContext");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3a92796-e896-47d3-8311-92f6ecc97f85"),
                            Name = "Children"
                        },
                        new
                        {
                            Id = new Guid("6b27f3ee-acc9-4cda-bf3a-a7311b2c00ce"),
                            Name = "Adult"
                        });
                });

            modelBuilder.Entity("Books.BookContext.Domain.Bookss.Book", b =>
                {
                    b.HasOne("Books.BookContext.Domain.Authors.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Books.BookContext.Domain.Types.SubType", null)
                        .WithMany()
                        .HasForeignKey("SubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Books.BookContext.Domain.Readers.Reader", b =>
                {
                    b.HasOne("Books.BookContext.Domain.Bookss.Book", null)
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.SubType", b =>
                {
                    b.HasOne("Books.BookContext.Domain.Types.Type", "Type")
                        .WithMany("SubTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Books.BookContext.Domain.Types.Type", b =>
                {
                    b.Navigation("SubTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
